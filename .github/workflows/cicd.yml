name: CI/CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Run CI tasks
    runs-on: ubuntu-20.04
    steps:
      - uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # Latest as of 2023-11-16
        with:
          toolchain: stable
          components: rustfmt,clippy
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Check "cargo fmt"
        run: cargo fmt -- --check
      - name: Run "cargo check"
        run: cargo check --locked --all-features --all-targets
      - name: Run "cargo clippy"
        run: cargo clippy --locked --all-features -- -D warnings
      - name: Run "cargo test"
        run: cargo test --locked --verbose --all-targets --all-features

  crate-metadata:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Extract crate metadata
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Extract crate information
        id: crate_metadata
        shell: bash
        run: |
          human_version="$(cargo metadata --no-deps --format-version 1 | jq -r '"v" + .packages[0].version')"
          if [ "${{ github.ref_name }}" != "${human_version}" ]; then
            echo "Tag does not match version in Cargo.toml: ${{ github.ref_name }} != ${human_version}"
            exit 1
          fi
          cargo metadata --no-deps --format-version 1 | jq -r '"name=" + .packages[0].name' | tee -a $GITHUB_OUTPUT
          cargo metadata --no-deps --format-version 1 | jq -r '"version=" + .packages[0].version' | tee -a $GITHUB_OUTPUT
          cargo metadata --no-deps --format-version 1 | jq -r '"msrv=" + .packages[0].rust_version' | tee -a $GITHUB_OUTPUT
    outputs:
      name: ${{ steps.crate_metadata.outputs.name }}
      version: ${{ steps.crate_metadata.outputs.version }}
      msrv: ${{ steps.crate_metadata.outputs.msrv }}

  build-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - ci
      - crate-metadata
    name: Build release
    strategy:
      fail-fast: false
      matrix:
        job:
        # To sort the matrix.
        - { target: aarch64-apple-darwin, os: macos-latest }
        - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest }
        - { target: x86_64-apple-darwin, os: macos-latest }
        - { target: x86_64-pc-windows-gnu, os: ubuntu-latest }
        - { target: x86_64-unknown-linux-gnu, os: ubuntu-20.04 }
    runs-on: ${{ matrix.job.os }}
    steps:
    - uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # Latest as of 2023-11-16
      with:
        toolchain: stable
    - uses: taiki-e/install-action@e2daa7c7c8bc02b4afae53143c6a07d8b916a3f7 # v2.21.12
      with:
        tool: cross
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Build release binary
      run: cargo build --release --locked --verbose --all-features --target=${{ matrix.job.target }}
      env:
        PKG_CONFIG_ALLOW_CROSS: 1
